{
  "name": "Catdog",
  "tagline": "We build a simple cat vs. dog image classifier",
  "body": "[Back to Profile.](http://mgallow.github.io)\r\n\r\n# Cat-Dog Image Classifier\r\n\r\n## **(Documentation in progress)\r\n\r\n## Introduction\r\n\r\n**Disclaimer**: This tutorial is highly based off of Francois Chollet's blog post: <https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html>\r\n\r\nIn this tutorial we create a cat vs. dog image classifier using the python deep learning library Keras. Keras is a wrapper that works on top of Tensorflow or Theano. I have constructed the following using the Tensorflow backend - though the steps should be similar (if not, identical) should you choose to use the Theano backend.\r\n\r\n![](https://github.com/MGallow/CatDog/blob/master/example.jpg)\r\n\r\n![](https://raw.githubusercontent.com/MGallow/CatDog/blob/master/example.jpg)\r\n\r\n### Why do we care?\r\n\r\nImage classification (in a much broader sense than just cats vs. dogs) has wide implications in medical imaging (think fracture vs. non-fracture), facial recognition, image search (think Google search with photos), etc. Working through a toy example like this helps us to conceptualize the problem as well as familiarize one's self with the latest research.\r\n\r\n## Requirements\r\n\r\nThis tutorial assumes basic knowledge of neural networks, specifically convolutional neural networks. Check out this excellent [blog post](http://cs231n.github.io/convolutional-networks/) on CNN's by [Andrej Karpathy](http://cs.stanford.edu/people/karpathy/) if needed. I would also recommend taking a look at this [tutorial](http://neuralnetworksanddeeplearning.com) by [Michael Nielsen](http://michaelnielsen.org) for a general overview of neural networks.\r\n\r\n**Software**:\r\n\r\n- Python 2.7, 3.5\r\n- Keras - available via pip or [Github](https://github.com/fchollet/keras)\r\n\r\n### Files:\r\n\r\n- [train_classifier.py](https://github.com/MGallow/CatDog/blob/master/train_classifier.py)\r\n- [pre-train_classifier.py](https://github.com/MGallow/CatDog/blob/master/pre-train_classifier.py)\r\n- [fine-tune_classifier.py](https://github.com/MGallow/CatDog/blob/master/fine-tune_classifier.py)\r\n- [MoveFiles.py](https://github.com/MGallow/CatDog/blob/master/MoveFiles.py)\r\n- [evaluate_classifier.ipynb](https://github.com/MGallow/CatDog/blob/master/evaluate_classifier.ipynb)\r\n- [fine-tune_classifier.ipynb](https://github.com/MGallow/CatDog/blob/master/fine-tune_classifier.ipynb)\r\n- [pre-train_classifier.ipynb](https://github.com/MGallow/CatDog/blob/master/pre-train_classifier.ipynb)\r\n- [train_classifier.ipynb](https://github.com/MGallow/CatDog/blob/master/train_classifier.ipynb)\r\n\r\n## Bottleneck Features\r\n\r\n## Fine-Tuning\r\n\r\n## Acknowledgements\r\n\r\n- Keras documentation: <https://keras.io>\r\n- This tutorial is highly based off Francois Chollet's blog post: <https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html>\r\n\r\n\r\n[Back to Profile.](http://mgallow.github.io)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}